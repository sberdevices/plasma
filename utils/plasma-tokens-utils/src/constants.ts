const { DESIGN_SYSTEM_PREFIX: designSystemPrefix, ROBO_COMMENT: roboComment } = process.env;

export const DESIGN_SYSTEM_PREFIX = designSystemPrefix !== undefined ? designSystemPrefix : 'plasma';
export const ROBO_COMMENT =
    roboComment !== undefined ? roboComment : '// Generated by robots, do not change this manually!\n\n';
export const DEPRECATED_COMMENT = '// @deprecated';
export const HTML_FONT_SIZE = 16;

export enum BaseColorsList {
    white = 'Основной белый, не зависит от темы',
    whitePrimary = 'Основной белый, не зависит от темы',
    whiteSecondary = 'Второстепенный белый',
    whiteTertiary = 'Третичный белый',

    black = 'Основной чёрный, не зависит от темы',
    blackPrimary = 'Основной чёрный, не зависит от темы',
    blackSecondary = 'Второстепенный чёрный',
    blackTertiary = 'Третичный чёрный',

    transparent = 'Прозрачный цвет',

    buttonClear = 'Второстепенная прозрачная',

    buttonBlack = 'Дефолтная чёрная, не зависит от темы',
    buttonBlackSecondary = 'Второстепенная чёрная, не зависит от темы',
    buttonBlackTransparent = 'Чёрная для использования поверх картинок',

    buttonWhite = 'Дефолтная белая, не зависит от темы',
    buttonWhiteSecondary = 'Второстепенная белая, не зависит от темы',
}
export enum ThemeColorsList {
    text = 'Базовый цвет текста, совпадает с primary',
    primary = 'Основной текст в интерфейсе',
    secondary = 'Второстепенный текст',
    tertiary = 'Третичный цвет текста',

    paragraph = 'Сплошной наборный текст',
    inverse = 'Белый в светлой теме / Чёрный в тёмной теме',

    background = 'Основной бэкграунд всех приложений и смартапов',
    backgroundPrimary = 'Первичный цвет фона', // ToDo: https://github.com/sberdevices/plasma/issues/1107
    backgroundSecondary = 'Вторичный цвет фона', // ToDo: https://github.com/sberdevices/plasma/issues/1107
    backgroundTertiary = 'Третичный цвет фона', // ToDo: https://github.com/sberdevices/plasma/issues/1107

    accent = 'Акцентный цвет бренда',
    success = 'Обозначение успешного сценария',
    warning = 'Цвет предупреждения',
    critical = 'Цвет ошибки',

    overlay = 'Цвет фона паранжи',

    gradient = 'Градиент для заливки основного фона',
    gradientDevice = 'Бэкграунд ассистента на девайсах',

    surfaceLiquid01 = 'Полупрозрачные поверхности', // ToDo: https://github.com/sberdevices/plasma/issues/1107
    surfaceLiquid02 = 'Полупрозрачные поверхности', // ToDo: https://github.com/sberdevices/plasma/issues/1107
    surfaceLiquid03 = 'Полупрозрачные поверхности', // ToDo: https://github.com/sberdevices/plasma/issues/1107
    surfaceSolid01 = 'Непрозрачные поверхности',
    surfaceSolid02 = 'Непрозрачные поверхности',
    surfaceSolid03 = 'Непрозрачные поверхности',
    surfaceCard = 'Основной фон для карточек',

    buttonPrimary = 'Первичный цвет контролов',
    buttonSecondary = 'Второстепенная кнопка',

    buttonAccent = 'Акцентный цвет у контролов',
    buttonSuccess = 'Кнопка для успешного сценария',
    buttonWarning = 'Цвет предупреждения у контролов',
    buttonCritical = 'Цвет ошибки у контролов',
    buttonChecked = 'Цвет зажатого контрола',
    buttonFocused = 'Цвет рамки фокуса у контрола',

    speechBubbleSent = 'Цвет фона баблов отправленный сообщений',
    speechBubbleReceived = 'Цвет фона баблов получнных сообщений',

    voicePhraseGradient = 'Градиент подсказок о голосовых запросах',

    skeletonGradient = 'Градиент скелетона',
    skeletonGradientLighter = 'Градиент скелетона для ярких компонентов',
}
export enum WebColorsList {
    buttonPrimaryHover = 'Цвет фона первичной кнопки / наведение',
    buttonPrimaryActive = 'Цвет фона первичной кнопки / нажатие',
    buttonSecondaryHover = 'Цвет фона второстепенной кнопки / наведение',
    buttonSecondaryActive = 'Цвет фона второстепенной кнопки / нажатие',
    buttonSuccessHover = 'Цвет фона кнопки успешного сценария / наведение',
    buttonSuccessActive = 'Цвет фона кнопки успешного сценария / нажатие',
    buttonWarningHover = 'Цвет фона кнопки предупреждения / наведение',
    buttonWarningActive = 'Цвет фона кнопки предупреждения / нажатие',
    buttonCriticalHover = 'Цвет фона кнопки ошибки / наведение',
    buttonCriticalActive = 'Цвет фона кнопки ошибки / нажатие',
    buttonCheckedHover = 'Цвет фона зажатой кнопки / наведение',
    buttonCheckedHoverColor = 'Цвет надписи зажатой кнопки / наведение',
    buttonCheckedActive = 'Цвет фона зажатой кнопки / нажатие',
    buttonCheckedActiveColor = 'Цвет надписи зажатой кнопки / нажатие',
    inputBorder = 'Цвет рамки поля ввода',
    inputBorderHover = 'Цвет рамки поля ввода / наведение',
    inputBorderFocus = 'Цвет рамки поля ввода / фокус',
    link = 'Цвет ссылки',
    linkHover = 'Цвет ссылки / наведение',
    linkActive = 'Цвет ссылки / нажатие',
    linkVisited = 'Цвет посещенной ссылки',
    linkVisitedHover = 'Цвет посещенной ссылки / нажатие',
    linkVisitedActive = 'Цвет посещенной ссылки / нажатие',
}
export const FullColorsList = { ...BaseColorsList, ...ThemeColorsList };
